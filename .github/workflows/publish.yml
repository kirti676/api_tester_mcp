name: Publish Package

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Install Node.js dependencies
        run: npm ci --ignore-scripts

      - name: Run tests
        run: |
          # Add test commands here when available
          echo "Tests would run here"

      - name: Check if NPM version exists
        id: npm-check
        run: |
          if npm view @kirti676/api-tester-mcp@$(node -p "require('./package.json').version") > /dev/null 2>&1; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.npm-check.outputs.version_exists == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes
            - See commit history for detailed changes
            
            ## Installation
            ```bash
            # npm
            npm install -g @kirti676/api-tester-mcp
            
            # pip
            pip install api-tester-mcp
            ```
            
            ## Quick Start
            ```bash
            npx @kirti676/api-tester-mcp --setup
            ```
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
